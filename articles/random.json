{"randomArticles":[{"articleTitle":"docker编写dockerfile，自定义tomcat镜像","articleAbstractText":"起因：最近一周的时间在断断续续学习docker，学到了Dockerfile文件，想着因为官方的tomcat镜像里的jdk版本比较高，可以自己用dockerfile 做一个jdk8的一个的tomcat9 的一个镜像文件。  1. 首先下载jdk8 Linux压缩包 选择linux x64版本包  2. 下载tomcat9 这两个选一个  3. 编写Dockerfile 脚本 这里选择的是centos最新版本 为基础镜像  使用ADD 指令可以自动的解压文件，非常方便 FROM centos # 作者 MAINTAINER LengMou&lt;lmtop@qq.com&gt; # 定义数据卷 VOLUME [\"/usr/local/jdk\",\"/usr/local/tomcat\"] # 复制并解压 jdk和tomcat文件 ADD jdk-8u291-linux-x64.tar.gz /usr/local/jdk ADD apache-tomcat-9.0.45.tar.gz /usr/local/tomcat # 添加环境变量 ENV MYPATH /usr/local ENV JAV....","articleStatus":0,"articlePermalink":"/articles/2021/05/11/1620724829593.html","articleImg1URL":"https://b3logfile.com/file/2021/05/solo-fetchupload-7657140118112880327-d57f494b.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"基于阿里云盘的共享云盘搭建","articleAbstractText":"背景 什么？阿里云盘公测了！？ 听说下载不限速？非常nice！ 但是好像分享功能还没有上线，这对于程序员的我来说，这是难不住我了，既然官方还没有开放，那我就自己做一个。 抓到的api 阿里云盘有一个APP版，还有一个网页版，自然是从网页版开始入手。  首先抓到了个显示文件列表的 显示文件列表 https://api.aliyundrive.com/v2/file/list 请求头 | key | value | 备注 | | - | - | - | | authorization | eyJhbGciOiJSU... | access_token（2小时刷新一次）详见刷新token |   keyvalue备注   drive_id1223242磁盘id值 parent_file_idroot上级文件夹路径 limit100一页显示文件数量 allfalse是否显示全部 image_thumbnail_processimage/resize,w_160/format,jpeg图片缩略图类型 order_byupdated_at排序字段 order_directiondesc排序顺序 f....","articleStatus":0,"articlePermalink":"/articles/2021/03/31/1617160877140.html","articleImg1URL":"https://b3logfile.com/file/2021/03/solo-fetchupload-6149940238218394793-09701427.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"记录一次q绑查询平台搭建","articleAbstractText":"背景 一次在群友的聊天中，群友发了一个链接，说整一个好活，点开一看输入QQ号码就可以获取绑定的手机号，我输入了一下我的QQ账号，居然真的把我的手机号查出来了。 我很震惊，鹅厂这么的互联网公司，用户数据还是被泄露了。 我查看了一下api的返回数据，里面标注了QQ群，我进入了QQ群，发现里面有很多人，都是整天喊着查谁谁谁户口什么，搞一些信息贩卖的生意，群主更是靠着Q绑查询api接口积累人气，定制接口，帮人搭建等生意。 我当时就比较感兴趣这个数据库究竟是怎么泄露，能不能自己也能搭建出来呢？ 于是我在群里发一下\u201c谁有库，我来帮你搭建接口\u201d，立马有两个小伙伴来找我了。 很快发给我了百度云盘连接，打开一看14G感觉挺真材实料的，于是开始下载。 准备工作 经历了不知道多长时间的等待，我的库下载下来了。  结果打开一看居然没有文件类型  应该是文本吧，解压后打开一看我傻了 全是这种格式的文本： 12312312312----123123123123 本来以为是库文件，于是乎打开idea，编写一下过滤规则，然后重新生成若干个文本文件。 // 遍历循环读取文件 public void getFiles()....","articleStatus":0,"articlePermalink":"/articles/2021/03/05/1614925308523.html","articleImg1URL":"https://b3logfile.com/file/2021/03/image-4390a8ab.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"java的克隆","articleAbstractText":"java的克隆 1.为什么要克隆？ 当一个类需要实例化大量属性相似对象的时候，相对于使用传统的new 关键字来创建对象时比较复杂且耗时耗资源，用原型模式生成对象就很高效。 2.克隆有哪些类型? 浅克隆： 新对象的属性和旧对象的属性完全相同，包括引用类属性的内存引用也完全相同。 深克隆： 新对象的属性和就对象的属性完全相同，引用的其他类的对象也会被克隆，不在指向原地址。 3.如何实现克隆？ 需要克隆的类需要实现 Cloneable接口 重写clone方法 package com.lengmou; public class Entity implements Cloneable{ @Override public Entity clone() throws CloneNotSupportedException { return (Entity) super.clone(); } private String name; private Integer age; public String getName() { return name; } public void setName(Stri....","articleStatus":0,"articlePermalink":"/articles/2021/03/23/1616465484570.html","articleImg1URL":"https://b3logfile.com/bing/20180402.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"}]}