{"relevantArticles":[{"articleTitle":"记录一次某APP 自动签到","articleAbstractText":"起源 疫情期间闲的没有事情做，于是乎打开了某软件康康好看的东西，结果一个视频就需要花费1000金币，虽然视频效果非常的清晰，但是我的金币够怎么够用啊！ 但是点击签到就可以获取1000金币，但是金币给的也就只够我一天看一部，完全不够，况且我还是快进看的。 　　我看了一下金币获取方式，除了通过一天一次的签到之外呢，还可以通过点击广告获取金币，一次500金币到1000金币不等，我当时就在想能不能通过抓包，看一下具体是怎么实现签到功能和点击广告获取金币的。 开始抓包 这里我使用的是一款名叫：HttpCanary的安卓抓包软件 话不多说开始上图:  我们可以明显的看到画着红框的地方就是我们的token，直接访问此URL就完成了签到功能，假如token不是动态的话，那就真的好办了！  第一天过去了 **　　到了当天半夜12点我再次打开了那个神秘的软件，开启抓包，点击签到一气呵成，果然不出我所料，token真的没有改变，看来接下来的事情就真的非常的好办了。**  我打开了阿里云平台，找到了网站监控，该监控是通过http协议进行访问需要监控的网站地址，根据网站返回的状态码来判断，该网站的状态，所以呢，....","articleStatus":0,"articlePermalink":"/articles/2021/03/03/1614740417803.html","articleImg1URL":"https://b3logfile.com/file/2021/03/solo-fetchupload-428692171837381883-f042cdca.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"让我们来基于alpine 来打造小的tomcat镜像吧","articleAbstractText":"前两天刚整完自定义的tomcat镜像，但是镜像有点大，足足有600mb实在看着不顺眼。 不经意间在翻看docker hub网站时看到了 Alpine 的基础镜像，大小只有5mb，这款linux发行版真的小的不能再小了。  让我们来基于alpine 来打造小的tomcat镜像吧 编写docker file 文件 FROM alpine # 作者 MAINTAINER LengMou&lt;lmtop@qq.com&gt; # 定义数据卷 VOLUME [\"/usr/local/jdk\",\"/usr/local/tomcat\"] # 复制并解压 jdk和tomcat文件 ADD jdk-8u291-linux-x64.tar.gz /usr/local/jdk ADD apache-tomcat-9.0.45.tar.gz /usr/local/tomcat # 添加环境变量 ENV MYPATH /usr/local ENV JAVA_HOME /usr/local/jdk/jdk1.8.0_291 ENV CATALINA_HOME /usr/local/tomcat/apache-t....","articleStatus":0,"articlePermalink":"/articles/2021/05/18/1621307408820.html","articleImg1URL":"https://b3logfile.com/file/2021/05/solo-fetchupload-8002869912613008725-e9284842.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"java的克隆","articleAbstractText":"java的克隆 1.为什么要克隆？ 当一个类需要实例化大量属性相似对象的时候，相对于使用传统的new 关键字来创建对象时比较复杂且耗时耗资源，用原型模式生成对象就很高效。 2.克隆有哪些类型? 浅克隆： 新对象的属性和旧对象的属性完全相同，包括引用类属性的内存引用也完全相同。 深克隆： 新对象的属性和就对象的属性完全相同，引用的其他类的对象也会被克隆，不在指向原地址。 3.如何实现克隆？ 需要克隆的类需要实现 Cloneable接口 重写clone方法 package com.lengmou; public class Entity implements Cloneable{ @Override public Entity clone() throws CloneNotSupportedException { return (Entity) super.clone(); } private String name; private Integer age; public String getName() { return name; } public void setName(Stri....","articleStatus":0,"articlePermalink":"/articles/2021/03/23/1616465484570.html","articleImg1URL":"https://b3logfile.com/bing/20180402.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"}]}